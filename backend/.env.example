# Kafka Configuration
KAFKA_BROKERS=localhost:9092
SKIP_KAFKA=true
KAFKA_CLIENT_ID=nba-scores
KAFKA_GROUP_ID=nba-scores-group

# AWS Configuration
AWS_REGION=us-west-2
AWS_ACCESS_KEY_ID=your_access_key_here
AWS_SECRET_ACCESS_KEY=your_secret_key_here

# Application Configuration
PORT=3001
LOG_LEVEL=info
NODE_ENV=development

# API Configuration
USE_TEST_DATA=true
CORS_ORIGIN=http://localhost:3000
WS_PING_INTERVAL=30000

# Cache Configuration
# Redis settings
REDIS_URL=redis://localhost:6379
REDIS_TTL=300000  # 5 minutes for Redis
CACHE_TTL=300000  # 5 minutes in milliseconds
SCOREBOARD_TTL=120000  # 2 minutes in milliseconds

# DynamoDB settings
DYNAMODB_TTL=86400  # 24 hours for DynamoDB
GAMES_TABLE_NAME=nba-games

# Add comments explaining each setting
# KAFKA_BROKERS: Comma-separated list of Kafka brokers
# SKIP_KAFKA: Set to true to disable Kafka integration
# AWS_REGION: AWS region for DynamoDB
# AWS_ACCESS_KEY_ID: Your AWS access key
# AWS_SECRET_ACCESS_KEY: Your AWS secret key
# PORT: Backend server port
# LOG_LEVEL: Logging level (debug, info, warn, error)
# NODE_ENV: Node environment (development, production)
# USE_TEST_DATA: Use mock data instead of real API
# CORS_ORIGIN: Frontend origin for CORS
# WS_PING_INTERVAL: WebSocket keepalive interval in ms
# REDIS_URL: Redis connection URL
# REDIS_TTL: Redis cache TTL in milliseconds
# CACHE_TTL: General cache TTL in milliseconds
# SCOREBOARD_TTL: Scoreboard-specific cache TTL
# DYNAMODB_TTL: DynamoDB items TTL in seconds
# GAMES_TABLE_NAME: DynamoDB table name for games 