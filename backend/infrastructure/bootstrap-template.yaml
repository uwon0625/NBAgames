AWSTemplateFormatVersion: '2010-09-09'
Description: Bootstrap template for NBA Live Scores application

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]

Resources:
  # S3 Bucket for Lambda code and artifacts
  ArtifactsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      BucketName: !Sub nba-live-artifacts-${AWS::AccountId}-${Environment}
      VersioningConfiguration:
        Status: Enabled
      # Add lifecycle rules to clean up old versions
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            Status: Enabled
            NoncurrentVersionExpiration:
              NoncurrentDays: 30
      # Block public access
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # IAM Role for CloudFormation
  CloudFormationRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      RoleName: !Sub nba-live-cfn-role-${Environment}
      Path: /nba-live/
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      Tags:
        - Key: Project
          Value: NBA-Live
        - Key: Environment
          Value: !Ref Environment

Outputs:
  ArtifactsBucketName:
    Description: Name of the S3 bucket for artifacts
    Value: !Ref ArtifactsBucket
  CloudFormationRoleArn:
    Description: ARN of the CloudFormation execution role
    Value: !GetAtt CloudFormationRole.Arn 