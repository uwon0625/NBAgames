"use strict";
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ParameterMapping = exports.MappingValue = void 0;
const jsiiDeprecationWarnings = require("../.warnings.jsii.js");
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
;
/**
 * Represents a Mapping Value.
 */
class MappingValue {
    /**
     * Creates a header mapping value.
     */
    static requestHeader(name) { try {
        jsiiDeprecationWarnings.print("@aws-cdk/aws-apigatewayv2-alpha.MappingValue#requestHeader", "");
    }
    catch (error) {
        if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
            Error.captureStackTrace(error, this.requestHeader);
        }
        throw error;
    } return new MappingValue(`$request.header.${name}`); }
    /**
     * Creates a query string mapping value.
     */
    static requestQueryString(name) { try {
        jsiiDeprecationWarnings.print("@aws-cdk/aws-apigatewayv2-alpha.MappingValue#requestQueryString", "");
    }
    catch (error) {
        if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
            Error.captureStackTrace(error, this.requestQueryString);
        }
        throw error;
    } return new MappingValue(`$request.querystring.${name}`); }
    /**
     * Creates a request body mapping value.
     */
    static requestBody(name) { try {
        jsiiDeprecationWarnings.print("@aws-cdk/aws-apigatewayv2-alpha.MappingValue#requestBody", "");
    }
    catch (error) {
        if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
            Error.captureStackTrace(error, this.requestBody);
        }
        throw error;
    } return new MappingValue(`$request.body.${name}`); }
    /**
     * Creates a request path mapping value.
     */
    static requestPath() { try {
        jsiiDeprecationWarnings.print("@aws-cdk/aws-apigatewayv2-alpha.MappingValue#requestPath", "");
    }
    catch (error) {
        if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
            Error.captureStackTrace(error, this.requestPath);
        }
        throw error;
    } return new MappingValue('$request.path'); }
    /**
     * Creates a request path parameter mapping value.
     */
    static requestPathParam(name) { try {
        jsiiDeprecationWarnings.print("@aws-cdk/aws-apigatewayv2-alpha.MappingValue#requestPathParam", "");
    }
    catch (error) {
        if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
            Error.captureStackTrace(error, this.requestPathParam);
        }
        throw error;
    } return new MappingValue(`$request.path.${name}`); }
    /**
     * Creates a context variable mapping value.
     */
    static contextVariable(variableName) { try {
        jsiiDeprecationWarnings.print("@aws-cdk/aws-apigatewayv2-alpha.MappingValue#contextVariable", "");
    }
    catch (error) {
        if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
            Error.captureStackTrace(error, this.contextVariable);
        }
        throw error;
    } return new MappingValue(`$context.${variableName}`); }
    /**
     * Creates a stage variable mapping value.
     */
    static stageVariable(variableName) { try {
        jsiiDeprecationWarnings.print("@aws-cdk/aws-apigatewayv2-alpha.MappingValue#stageVariable", "");
    }
    catch (error) {
        if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
            Error.captureStackTrace(error, this.stageVariable);
        }
        throw error;
    } return new MappingValue(`$stageVariables.${variableName}`); }
    /**
     * Creates a custom mapping value.
     */
    static custom(value) { try {
        jsiiDeprecationWarnings.print("@aws-cdk/aws-apigatewayv2-alpha.MappingValue#custom", "");
    }
    catch (error) {
        if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
            Error.captureStackTrace(error, this.custom);
        }
        throw error;
    } return new MappingValue(value); }
    constructor(value) {
        try {
            jsiiDeprecationWarnings.print("@aws-cdk/aws-apigatewayv2-alpha.MappingValue", "");
        }
        catch (error) {
            if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
                Error.captureStackTrace(error, MappingValue);
            }
            throw error;
        }
        this.value = value;
    }
}
exports.MappingValue = MappingValue;
_a = JSII_RTTI_SYMBOL_1;
MappingValue[_a] = { fqn: "@aws-cdk/aws-apigatewayv2-alpha.MappingValue", version: "2.114.1-alpha.0" };
/**
* Creates an empty mapping value.
*/
MappingValue.NONE = new MappingValue('');
/**
 * Represents a Parameter Mapping.
 */
class ParameterMapping {
    /**
     * Creates a mapping from an object.
     */
    static fromObject(obj) {
        try {
            jsiiDeprecationWarnings.print("@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping#fromObject", "");
        }
        catch (error) {
            if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
                Error.captureStackTrace(error, this.fromObject);
            }
            throw error;
        }
        const mapping = new ParameterMapping();
        for (const [k, m] of Object.entries(obj)) {
            mapping.custom(k, m.value);
        }
        return mapping;
    }
    constructor() {
        try {
            jsiiDeprecationWarnings.print("@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping", "");
        }
        catch (error) {
            if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
                Error.captureStackTrace(error, ParameterMapping);
            }
            throw error;
        }
        this.mappings = {};
    }
    /**
     * Creates a mapping to append a header.
     */
    appendHeader(name, value) {
        try {
            jsiiDeprecationWarnings.print("@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping#appendHeader", "");
            jsiiDeprecationWarnings._aws_cdk_aws_apigatewayv2_alpha_MappingValue(value);
        }
        catch (error) {
            if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
                Error.captureStackTrace(error, this.appendHeader);
            }
            throw error;
        }
        this.mappings[`append:header.${name}`] = value.value;
        return this;
    }
    /**
     * Creates a mapping to overwrite a header.
     */
    overwriteHeader(name, value) {
        try {
            jsiiDeprecationWarnings.print("@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping#overwriteHeader", "");
            jsiiDeprecationWarnings._aws_cdk_aws_apigatewayv2_alpha_MappingValue(value);
        }
        catch (error) {
            if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
                Error.captureStackTrace(error, this.overwriteHeader);
            }
            throw error;
        }
        this.mappings[`overwrite:header.${name}`] = value.value;
        return this;
    }
    /**
     * Creates a mapping to remove a header.
     */
    removeHeader(name) {
        try {
            jsiiDeprecationWarnings.print("@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping#removeHeader", "");
        }
        catch (error) {
            if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
                Error.captureStackTrace(error, this.removeHeader);
            }
            throw error;
        }
        this.mappings[`remove:header.${name}`] = '';
        return this;
    }
    /**
     * Creates a mapping to append a query string.
     */
    appendQueryString(name, value) {
        try {
            jsiiDeprecationWarnings.print("@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping#appendQueryString", "");
            jsiiDeprecationWarnings._aws_cdk_aws_apigatewayv2_alpha_MappingValue(value);
        }
        catch (error) {
            if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
                Error.captureStackTrace(error, this.appendQueryString);
            }
            throw error;
        }
        this.mappings[`append:querystring.${name}`] = value.value;
        return this;
    }
    /**
     * Creates a mapping to overwrite a querystring.
     */
    overwriteQueryString(name, value) {
        try {
            jsiiDeprecationWarnings.print("@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping#overwriteQueryString", "");
            jsiiDeprecationWarnings._aws_cdk_aws_apigatewayv2_alpha_MappingValue(value);
        }
        catch (error) {
            if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
                Error.captureStackTrace(error, this.overwriteQueryString);
            }
            throw error;
        }
        this.mappings[`overwrite:querystring.${name}`] = value.value;
        return this;
    }
    /**
     * Creates a mapping to remove a querystring.
     */
    removeQueryString(name) {
        try {
            jsiiDeprecationWarnings.print("@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping#removeQueryString", "");
        }
        catch (error) {
            if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
                Error.captureStackTrace(error, this.removeQueryString);
            }
            throw error;
        }
        this.mappings[`remove:querystring.${name}`] = '';
        return this;
    }
    /**
     * Creates a mapping to overwrite a path.
     */
    overwritePath(value) {
        try {
            jsiiDeprecationWarnings.print("@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping#overwritePath", "");
            jsiiDeprecationWarnings._aws_cdk_aws_apigatewayv2_alpha_MappingValue(value);
        }
        catch (error) {
            if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
                Error.captureStackTrace(error, this.overwritePath);
            }
            throw error;
        }
        this.mappings['overwrite:path'] = value.value;
        return this;
    }
    /**
     * Creates a custom mapping.
     */
    custom(key, value) {
        try {
            jsiiDeprecationWarnings.print("@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping#custom", "");
        }
        catch (error) {
            if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
                Error.captureStackTrace(error, this.custom);
            }
            throw error;
        }
        this.mappings[key] = value;
        return this;
    }
}
exports.ParameterMapping = ParameterMapping;
_b = JSII_RTTI_SYMBOL_1;
ParameterMapping[_b] = { fqn: "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping", version: "2.114.1-alpha.0" };
//# sourceMappingURL=data:application/json;base64,